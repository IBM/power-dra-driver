FROM registry.access.redhat.com/ubi9/ubi:9.6-1751287003 as builder
USER root
WORKDIR /workspace

# Copy go.mod and go.sum first to cache dependencies
COPY go.mod go.sum ./

# Now copy the rest of the source code
COPY . .

# From https://github.com/openshift/oc-mirror/blob/main/Dockerfile#L8C1-L20C2
# DNF Package Install List
ARG DNF_LIST="\
  jq \
  tar \
  gcc \
  make \
  git \
  gpgme-devel \
  libassuan-devel \
  wget \
  pigz \
  procps-ng \
  util-linux \
"

RUN set -ex \
     && ARCH=$(arch | sed 's|x86_64|amd64|g' | sed 's|aarch64|arm64|g')         \
     && dnf install -y --nodocs --setopt=install_weak_deps=false ${DNF_LIST}    \
     && dnf clean all -y                                                        \
     && GO_VERSION=go1.23.4                                                     \
     && curl -sL https://golang.org/dl/${GO_VERSION}.linux-${ARCH}.tar.gz       \
        | tar xzvf - --directory /usr/local/                                    \
     && /usr/local/go/bin/go version                                            \
     && ln -f /usr/local/go/bin/go /usr/bin/go

# Link gcc to /usr/bin/s390x-linux-gnu-gcc as go requires it on s390x
RUN [ "$(arch)" == "s390x" ]                                                    \
     && ln /usr/bin/gcc /usr/bin/s390x-linux-gnu-gcc                            \
     || echo "Not running on s390x, skip linking gcc binary"

ENV GOROOT=/usr/local/go
ENV PATH="/root/platform/bin:/opt/power-dra/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:$GOROOT/bin"

COPY . .

RUN ARCH=$(arch | sed 's|x86_64|amd64|g' | sed 's|aarch64|arm64|g') \
        CGO_ENABLED=1 \
        CGO_CFLAGS=-I/usr/include \
        CGO_LDFLAGS="-L/lib64" GOOS=linux \
        go build ${BUILD_FLAGS} -tags strictfipsruntime -a -o bin/power-dra-kubeletplugin ./cmd/power-dra-kubeletplugin

FROM registry.access.redhat.com/ubi9/ubi-minimal:9.6-1751286687

LABEL io.k8s.display-name="IBM Power DRA Driver"
LABEL name="IBM Power DRA Driver"
LABEL vendor="IBM"
LABEL version="1.0.0"
LABEL release="N/A"
LABEL summary="Automate the management and monitoring of addition of specific devices to a Pod."
LABEL description="Automate the management and monitoring of addition of specific devices to a Pod."

RUN microdnf -y update && microdnf install util-linux -y && microdnf clean all
WORKDIR /

# Copy the entrypoint script and the binary from the builder stage
COPY ./build/entrypoint.sh /
COPY --from=builder --chmod=755 /workspace/bin/power-dra-kubeletplugin /opt/power-dra/bin/

ENTRYPOINT ["/entrypoint.sh"]